<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.feredback.feredback_backend.mapper.CandidateMapper">

    <resultMap id="CandidateEntityMap" type="com.feredback.feredback_backend.entity.Candidate">
            <id property="id" column="id" jdbcType="INTEGER"/>
            <result property="firstName" column="first_name" jdbcType="VARCHAR"/>
            <result property="middleName" column="middle_name" jdbcType="VARCHAR"/>
            <result property="lastName" column="last_name" jdbcType="VARCHAR"/>
            <result property="email" column="email" jdbcType="VARCHAR"/>
            <result property="isDeleted" column="is_deleted" jdbcType="TINYINT"/>
            <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
            <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <sql id="candidate_columns">
        id, first_name, middle_name, last_name, email, is_deleted, create_time, update_time
    </sql>

    <insert id="insertCandidate">
        INSERT INTO
            candidate (id, first_name, middle_name, last_name, email, create_time, update_time)
        VALUES
            (#{id}, #{firstName}, #{middleName}, #{lastName}, #{email}, #{createTime}, #{updateTime})
    </insert>

    <update id="deleteCandidateById">
        DELETE from candidate
        WHERE
        id = #{id}
    </update>

    <delete id="clearCandidatesInTeam">
        DELETE FROM candidate_team_mid
        WHERE team_id = #{teamId} AND is_deleted = 0
    </delete>

    <select id="findByEmail" resultMap="CandidateEntityMap">
        SELECT <include refid="candidate_columns"/>  FROM candidate WHERE email = #{email} AND is_deleted = 0
    </select>

    <select id="findCandidateById" resultMap="CandidateEntityMap">
        SELECT <include refid="candidate_columns"/>  FROM candidate WHERE id = #{id} AND is_deleted = 0
    </select>

    <select id="findCandidatesByTeamId" resultMap="CandidateEntityMap">
        SELECT c.id, c.first_name, c.middle_name, c.last_name, c.email, c.create_time, c.update_time
        FROM candidate c
        INNER JOIN candidate_team_mid mid
        ON c.id = mid.candidate_id
        WHERE mid.team_id = #{teamId} AND mid.is_deleted = 0 AND c.is_deleted = 0
    </select>

    <select id="findAllCandidates" resultMap="CandidateEntityMap">
        SELECT c.id, c.first_name, c.middle_name, c.last_name, c.email, c.create_time, c.update_time
        FROM candidate c INNER JOIN candidate_subject_mid cs
        ON c.id = cs.candidate_id
        WHERE cs.subject_id =  #{subjectId} AND cs.is_deleted = 0 AND c.is_deleted = 0
    </select>

    <select id="findDuplicatedCandidateInSubject" resultType="java.lang.Integer">
        SELECT * FROM candidate_subject_mid WHERE candidate_id = #{candidateId} AND subject_id = #{subjectId} AND is_deleted = 0
    </select>
    <select id="findCandidateByEmailAndId" resultMap="CandidateEntityMap">
        SELECT <include refid="candidate_columns"/>
        FROM candidate
        WHERE id = #{id} AND email=#{email} AND is_deleted = 0

    </select>
    <select id="findDuplicatedCandidateInProject" resultType="java.lang.Integer">
        SELECT count(id) FROM project_candidate_mid
        WHERE project_id = #{projectId} AND candidate_id = #{candidateId} AND is_deleted = 0
    </select>

    <update id="removeCandidateFromAllSubjects">
        update candidate_subject_mid
        SET
            is_deleted = 1,
            update_time = #{updateTime}
        WHERE
            candidate_id = #{candidateId} AND is_deleted = 0
    </update>
    <update id="removeCandidateFromAllTeams">
        update candidate_team_mid
        SET
            is_deleted = 1,
            update_time = #{updateTime}
        WHERE
            candidate_id = #{candidateId} AND is_deleted = 0
    </update>
    <update id="removeCandidateFromAllProjects">
        update project_candidate_mid
        SET
            is_deleted = 1,
            update_time = #{updateTime}
        WHERE
            candidate_id = #{candidateId} AND is_deleted = 0
    </update>


</mapper>
